version: '3'

services:
    app:
      build: ./app
      links:
        - redis
      expose:
        - "8080"
      volumes:
        - ./app/:/src
      environment:
        - API_ENDPOINT=//localhost:8080/api
        - NODE_ENV=development
        - LOG_LEVEL=info

    api:
      build: ./api
      links:
        - redis
      expose:
        - "8080"
      volumes:
        - ./api/:/src
      environment:
        - NODE_ENV=development
        - LOG_LEVEL=info
        - PORT=8080
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=rozaroute
        - POSTGRES_HOST=postgres
        - POSTGRES_PORT=5432
      env_file: ~/status-check.env

    scheduler:
      build: ./scheduler
      links:
        - redis
      volumes:
        - ./scheduler/:/src
      environment:
        - NODE_ENV=development
        - LOG_LEVEL=info
      env_file: ~/status-check.env

    redis:
      image: redis
      ports:
          - "6379"

    nginx:
      build: ./nginx
      links:
        - app
        - api
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      ports:
        - "8080:80"

    postgres:
      build: ./postgres
      volumes:
        - pgdata:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=postgres
        - PGDATA=/var/lib/postgresql/data/pgdata

volumes:
  pgdata:
